本地套接字的作用: 本地的进程间通信
    有关系的进程间通信
    没有关系的进程间通信

本地套接字的实现流程和网络套接字的实现流程类似, 一般采用TCP

本地套接字通信流程:
    服务器端:
        1. 创建一个监听的套接字
            int lfd = socket(AF_UNIX/AF_LOCAL, SOCK_STREAM, 0);
        2. 监听的套接字绑定本地的套接字文件: server端
            struct sockaddr_un sockaddr;
            // 绑定成功之后, 指定的sum_path中的套接字文件会自动生成
            bind(lfd, sockaddr, len);
        3. 监听
            listen(lfd);
        4. 等待并接受客户端的连接请求
            struct sockaddr_un cliaddr;
            accept(lfd, cliaddr, len);
        5. 通信
            接收数据: read/recv
            发送数据: write/send
        6. 关闭连接

    客户端流程:
        1. 创建套接字
            int fd = socket(AF_UNIX, SOCK_STREAM, 0);
        2. 监听的套接字绑定本地的IP、端口
            struct sockaddr_un addr;
            // 绑定成功之后, 指定的sum_path中的套接字文件会自动生成
            bind(lfd, sockaddr, len);
        3. 连接服务器
            connect(fd, &seraddr, sizeof(seraddr));
        4. 通信
            接收数据: read/recv
            发送数据: write/send
        5. 关闭连接